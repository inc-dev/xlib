#pragma hdrstop
#define isValidTest
#include "xListTest.h"
#include "..\..\base\xxList.h"
#include <stdio.h>
#include "xArrayTest.h"

using namespace XSPACE;
template<typename T>                                    
const char * ListTest1()
 {
  List<T> l;
   if(l.Data->RefCount.Value==1)return "1.RefCount==1";
   if(l.Data->Capacity!=0)return "1.Capacity!=0";
   if(l.Data->TopIndex!=0||l.Data->HolesCount!=0||l.Data->FirstFreeIndex!=0)return "1.free";
   if(l.Data->FirstIndex!=0||l.Data->LastIndex!=0)return "1.index";
  l.Add(T(1));
   if(l.Data->RefCount.Value!=1)return "2.RefCount!=1";
   if(l.Data->Capacity<=0)return "2.Capacity<=0";
   if(l.Data->TopIndex!=1||l.Data->HolesCount!=0||l.Data->FirstFreeIndex!=1)return "2.free";
   if(l.Data->FirstIndex!=1||l.Data->LastIndex!=1)return "2.index";
   if(l.Data->Items[0].next!=0||l.Data->Items[0].prev!=0)return "2.next prev";
   if(l.Data->Items[0].Value!=1)return "2.value";
  l.Add(T(2));
   if(l.Data->RefCount.Value!=1)return "3.RefCount!=1";
   if(l.Data->Capacity<=1)return "3.Capacity<=1";
   if(l.Data->TopIndex!=2||l.Data->HolesCount!=0||l.Data->FirstFreeIndex!=2)return "3.free";
   if(l.Data->FirstIndex!=1||l.Data->LastIndex!=2)return "3.index";
   if(l.Data->Items[0].next!=2||l.Data->Items[0].prev!=0)return "3.[1] next prev";
   if(l.Data->Items[1].next!=0||l.Data->Items[1].prev!=1)return "3.[2] next prev";
   if(l.Data->Items[0].Value!=1)return "3.[1]value";
   if(l.Data->Items[1].Value!=2)return "3.[2]value";
  l.Add(T(3));
   if(l.Data->RefCount.Value!=1)return "4.RefCount!=1";
   if(l.Data->Capacity<=2)return "4.Capacity<=2";
   if(l.Data->TopIndex!=3||l.Data->HolesCount!=0||l.Data->FirstFreeIndex!=3)return "4.free";
   if(l.Data->FirstIndex!=1||l.Data->LastIndex!=3)return "4.index";
   if(l.Data->Items[0].next!=2||l.Data->Items[0].prev!=0)return "4.[1] next prev";
   if(l.Data->Items[1].next!=3||l.Data->Items[1].prev!=1)return "4.[2] next prev";
   if(l.Data->Items[2].next!=0||l.Data->Items[2].prev!=2)return "4.[3] next prev";
   if(l.Data->Items[0].Value!=1)return "4.[1]value";
   if(l.Data->Items[1].Value!=2)return "4.[2]value";
   if(l.Data->Items[2].Value!=3)return "4.[2]value";
  List<T> ld1,ld2,ld3,ld4;
  ld1.Add(T(1));
  int i = ld1.Delete(1);
   if(i!=0)return "5.next";
   if(ld1.Data->RefCount.Value!=1)return "5.RefCount!=1";
   if(ld1.Data->Capacity<=0)return "5.Capacity==0";
   if(ld1.Data->TopIndex!=1||ld1.Data->HolesCount!=1||ld1.Data->FirstFreeIndex!=0)return "5.free";
   if(ld1.Data->FirstIndex!=0||ld1.Data->LastIndex!=0)return "5.index";
   if(ld1.Data->Items[0].next!=-1||ld1.Data->Items[0].prev!=1)return "5.[1] next prev";
  ld1.Add(T(1));
   if(ld1.Data->RefCount.Value!=1)return "6.RefCount!=1";
   if(ld1.Data->Capacity<=0)return "6.Capacity==0";
   if(ld1.Data->TopIndex!=1||ld1.Data->HolesCount!=0||ld1.Data->FirstFreeIndex!=1)return "6.free";
   if(ld1.Data->FirstIndex!=1||ld1.Data->LastIndex!=1)return "6.index";
   if(ld1.Data->Items[0].next!=0||ld1.Data->Items[0].prev!=0)return "6.[1] next prev";
   if(ld1.Data->Items[0].Value!=1)return "6.[1]value";
  ld1.Add(T(2));
   if(ld1.Data->RefCount.Value!=1)return "7.RefCount!=1";
   if(ld1.Data->Capacity<=1)return "7.Capacity==1";
   if(ld1.Data->TopIndex!=2||ld1.Data->HolesCount!=0||ld1.Data->FirstFreeIndex!=2)return "7.free";
   if(ld1.Data->FirstIndex!=1||ld1.Data->LastIndex!=2)return "7.index";
   if(ld1.Data->Items[0].next!=2||ld1.Data->Items[0].prev!=0)return "7.[1] next prev";
   if(ld1.Data->Items[1].next!=0||ld1.Data->Items[1].prev!=1)return "7.[2] next prev";
   if(ld1.Data->Items[0].Value!=1)return "7.[1]value";
   if(ld1.Data->Items[1].Value!=2)return "7.[2]value";
  i=ld1.Delete(1);
   if(i!=2)return "8.next";
   if(ld1.Data->RefCount.Value!=1)return "8.RefCount!=1";
   if(ld1.Data->Capacity<=0)return "8.Capacity==0";
   if(ld1.Data->TopIndex!=2||ld1.Data->HolesCount!=1||ld1.Data->FirstFreeIndex!=0)return "8.free";
   if(ld1.Data->FirstIndex!=2||ld1.Data->LastIndex!=2)return "8.index";
   if(ld1.Data->Items[0].next!=-1||ld1.Data->Items[0].prev!=2)return "8.[1] next prev";
   if(ld1.Data->Items[1].next!=0||ld1.Data->Items[1].prev!=0)return "8.[2] next prev";
   if(ld1.Data->Items[1].Value!=2)return "8.[2]value";
  ld1.Add(T(1));
   if(ld1.Data->RefCount.Value!=1)return "9.RefCount!=1";
   if(ld1.Data->Capacity<=0)return "9.Capacity==0";
   if(ld1.Data->TopIndex!=2||ld1.Data->HolesCount!=0||ld1.Data->FirstFreeIndex!=2)return "9.free";
   if(ld1.Data->FirstIndex!=2||ld1.Data->LastIndex!=1)return "9.index";
   if(ld1.Data->Items[0].next!=0||ld1.Data->Items[0].prev!=2)return "9.[1] next prev";
   if(ld1.Data->Items[1].next!=1||ld1.Data->Items[1].prev!=0)return "9.[2] next prev";
   if(ld1.Data->Items[1].Value!=2)return "9.[2]value";
   if(ld1.Data->Items[0].Value!=1)return "9.[1]value";
  i=ld1.Delete(2);
   if(i!=1)return "10.next";
   if(ld1.Data->RefCount.Value!=1)return "10.RefCount!=1";
   if(ld1.Data->Capacity<=0)return "10.Capacity==0";
   if(ld1.Data->TopIndex!=2||ld1.Data->HolesCount!=1||ld1.Data->FirstFreeIndex!=1)return "10.free";
   if(ld1.Data->FirstIndex!=1||ld1.Data->LastIndex!=1)return "10.index";
   if(ld1.Data->Items[0].next!=0||ld1.Data->Items[0].prev!=0)return "10.[1] next prev";
   if(ld1.Data->Items[1].next!=-1||ld1.Data->Items[1].prev!=2)return "10.[2] next prev";
   if(ld1.Data->Items[0].Value!=1)return "10.[1]value";
//----------   
  ld1.Add(T(2)); //вернулись :)
   if(ld1.Data->RefCount.Value!=1)return "11.RefCount!=1";
   if(ld1.Data->Capacity<=1)return "11.Capacity==1";
   if(ld1.Data->TopIndex!=2||ld1.Data->HolesCount!=0||ld1.Data->FirstFreeIndex!=2)return "11.free";
   if(ld1.Data->FirstIndex!=1||ld1.Data->LastIndex!=2)return "11.index";
   if(ld1.Data->Items[0].next!=2||ld1.Data->Items[0].prev!=0)return "11.[1] next prev";
   if(ld1.Data->Items[1].next!=0||ld1.Data->Items[1].prev!=1)return "11.[2] next prev";
   if(ld1.Data->Items[0].Value!=1)return "11.[1]value";
   if(ld1.Data->Items[1].Value!=2)return "11.[2]value";
  i=ld1.Delete(2);
   if(i!=0)return "12.next";
   if(ld1.Data->RefCount.Value!=1)return "12.RefCount!=1";
   if(ld1.Data->Capacity<=0)return "12.Capacity==1";
   if(ld1.Data->TopIndex!=2||ld1.Data->HolesCount!=1||ld1.Data->FirstFreeIndex!=1)return "12.free";
   if(ld1.Data->FirstIndex!=1||ld1.Data->LastIndex!=1)return "12.index";
   if(ld1.Data->Items[0].next!=0||ld1.Data->Items[0].prev!=0)return "12.[1] next prev";
   if(ld1.Data->Items[1].next!=-1||ld1.Data->Items[1].prev!=2)return "12.[2] next prev";
   if(ld1.Data->Items[0].Value!=1)return "12.[1]value";
  ld1.Add(T(2)); //вернулись :)
   if(ld1.Data->RefCount.Value!=1)return "13.RefCount!=1";
   if(ld1.Data->Capacity<=1)return "13.Capacity==1";
   if(ld1.Data->TopIndex!=2||ld1.Data->HolesCount!=0||ld1.Data->FirstFreeIndex!=2)return "13.free";
   if(ld1.Data->FirstIndex!=1||ld1.Data->LastIndex!=2)return "13.index";
   if(ld1.Data->Items[0].next!=2||ld1.Data->Items[0].prev!=0)return "13.[1] next prev";
   if(ld1.Data->Items[1].next!=0||ld1.Data->Items[1].prev!=1)return "13.[2] next prev";
   if(ld1.Data->Items[0].Value!=1)return "13.[1]value";
   if(ld1.Data->Items[1].Value!=2)return "13.[2]value";
  i=ld1.Delete(1,2);
   if(i!=0)return "14.next";
   if(ld1.Data->RefCount.Value!=1)return "14.RefCount!=1";
   if(ld1.Data->Capacity<=1)return "14.Capacity==1";
   if(ld1.Data->TopIndex!=2||ld1.Data->HolesCount!=2||ld1.Data->FirstFreeIndex!=0)return "14.free";
   if(ld1.Data->FirstIndex!=0||ld1.Data->LastIndex!=0)return "14.index";
   if(ld1.Data->Items[0].next!=-1||ld1.Data->Items[0].prev!=1)return "14.[1] next prev";
   if(ld1.Data->Items[1].next!=-1||ld1.Data->Items[1].prev!=2)return "14.[2] next prev";
  ld1.Add(T(1)); //вернулись :)
  ld1.Add(T(2)); //вернулись :)
   if(ld1.Data->RefCount.Value!=1)return "15.RefCount!=1";
   if(ld1.Data->Capacity<=1)return "15.Capacity==1";
   if(ld1.Data->TopIndex!=2||ld1.Data->HolesCount!=0||ld1.Data->FirstFreeIndex!=2)return "15.free";
   if(ld1.Data->FirstIndex!=1||ld1.Data->LastIndex!=2)return "15.index";
   if(ld1.Data->Items[0].next!=2||ld1.Data->Items[0].prev!=0)return "15.[1] next prev";
   if(ld1.Data->Items[1].next!=0||ld1.Data->Items[1].prev!=1)return "15.[2] next prev";
   if(ld1.Data->Items[0].Value!=1)return "15.[1]value";
   if(ld1.Data->Items[1].Value!=2)return "15.[2]value";
  ld1.Add(T(3));
   if(ld1.Data->RefCount.Value!=1)return "16.RefCount!=1";
   if(ld1.Data->Capacity<=2)return "16.Capacity==1";
   if(ld1.Data->TopIndex!=3||ld1.Data->HolesCount!=0||ld1.Data->FirstFreeIndex!=3)return "16.free";
   if(ld1.Data->FirstIndex!=1||ld1.Data->LastIndex!=3)return "16.index";
   if(ld1.Data->Items[0].next!=2||ld1.Data->Items[0].prev!=0)return "16.[1] next prev";
   if(ld1.Data->Items[1].next!=3||ld1.Data->Items[1].prev!=1)return "16.[2] next prev";
   if(ld1.Data->Items[2].next!=0||ld1.Data->Items[2].prev!=2)return "16.[3] next prev";
   if(ld1.Data->Items[0].Value!=1)return "16.[1]value";
   if(ld1.Data->Items[1].Value!=2)return "16.[2]value";
   if(ld1.Data->Items[2].Value!=3)return "16.[3]value";
//-----------------------------   
  i=ld1.Delete(1);
   if(i!=2)return "17.next";
   if(ld1.Data->RefCount.Value!=1)return "17.RefCount!=1";
   if(ld1.Data->Capacity<=1)return "17.Capacity==1";
   if(ld1.Data->TopIndex!=3||ld1.Data->HolesCount!=1||ld1.Data->FirstFreeIndex!=0)return "17.free";
   if(ld1.Data->FirstIndex!=2||ld1.Data->LastIndex!=3)return "17.index";
   if(ld1.Data->Items[0].next!=-1||ld1.Data->Items[0].prev!=3)return "17.[1] next prev";
   if(ld1.Data->Items[1].next!=3||ld1.Data->Items[1].prev!=0)return "17.[2] next prev";
   if(ld1.Data->Items[2].next!=0||ld1.Data->Items[2].prev!=2)return "17.[3] next prev";
   if(ld1.Data->Items[1].Value!=2)return "17.[2]value";
   if(ld1.Data->Items[2].Value!=3)return "17.[3]value";
  i=ld1.Delete(2);
   if(i!=3)return "18.next";
   if(ld1.Data->RefCount.Value!=1)return "18.RefCount!=1";
   if(ld1.Data->Capacity<=1)return "18.Capacity==1";
   if(ld1.Data->TopIndex!=3||ld1.Data->HolesCount!=2||ld1.Data->FirstFreeIndex!=1)return "18.free";
   if(ld1.Data->FirstIndex!=3||ld1.Data->LastIndex!=3)return "18.index";
   if(ld1.Data->Items[0].next!=-1||ld1.Data->Items[0].prev!=3)return "18.[1] next prev";
   if(ld1.Data->Items[1].next!=-1||ld1.Data->Items[1].prev!=0)return "18.[2] next prev";
   if(ld1.Data->Items[2].next!=0||ld1.Data->Items[2].prev!=0)return "18.[3] next prev";
   if(ld1.Data->Items[2].Value!=3)return "18.[3]value";
  i=ld1.Delete(3);
   if(i!=0)return "19.next";
   if(ld1.Data->RefCount.Value!=1)return "19.RefCount!=1";
   if(ld1.Data->Capacity<=0)return "19.Capacity==1";
   if(ld1.Data->TopIndex!=3||ld1.Data->HolesCount!=3||ld1.Data->FirstFreeIndex!=2)return "19.free";
   if(ld1.Data->FirstIndex!=0||ld1.Data->LastIndex!=0)return "19.index";
   if(ld1.Data->Items[0].next!=-1||ld1.Data->Items[0].prev!=3)return "19.[1] next prev";
   if(ld1.Data->Items[1].next!=-1||ld1.Data->Items[1].prev!=0)return "19.[2] next prev";
   if(ld1.Data->Items[2].next!=-1||ld1.Data->Items[2].prev!=1)return "19.[3] next prev";
  ld1.Add(T(1));
  ld1.Add(T(2));
  ld1.Add(T(3));
  i=ld1.Delete(2);
   if(i!=3)return "22.next";
   if(ld1.Data->RefCount.Value!=1)return "22.RefCount!=1";
   if(ld1.Data->Capacity<=2)return "22.Capacity==1";
   if(ld1.Data->TopIndex!=3||ld1.Data->HolesCount!=1||ld1.Data->FirstFreeIndex!=1)return "22.free";
   if(ld1.Data->FirstIndex!=1||ld1.Data->LastIndex!=3)return "22.index";
   if(ld1.Data->Items[0].next!=3||ld1.Data->Items[0].prev!=0)return "22.[1] next prev";
   if(ld1.Data->Items[1].next!=-1||ld1.Data->Items[1].prev!=3)return "22.[2] next prev";
   if(ld1.Data->Items[2].next!=0||ld1.Data->Items[2].prev!=1)return "22.[3] next prev";
   if(ld1.Data->Items[0].Value!=1)return "22.[3]value";
   if(ld1.Data->Items[2].Value!=3)return "22.[3]value";
  i=ld1.Delete(3);
   if(i!=0)return "23.next";
   if(ld1.Data->RefCount.Value!=1)return "23.RefCount!=1";
   if(ld1.Data->Capacity<=2)return "23.Capacity==1";
   if(ld1.Data->TopIndex!=3||ld1.Data->HolesCount!=2||ld1.Data->FirstFreeIndex!=2)return "23.free";
   if(ld1.Data->FirstIndex!=1||ld1.Data->LastIndex!=1)return "23.index";
   if(ld1.Data->Items[0].next!=0||ld1.Data->Items[0].prev!=0)return "23.[1] next prev";
   if(ld1.Data->Items[1].next!=-1||ld1.Data->Items[1].prev!=3)return "23.[2] next prev";
   if(ld1.Data->Items[2].next!=-1||ld1.Data->Items[2].prev!=1)return "23.[3] next prev";
   if(ld1.Data->Items[0].Value!=1)return "23.[3]value";
  i=ld1.Delete(1);
   if(ld1.Data->RefCount.Value!=1)return "24.RefCount!=1";
   if(ld1.Data->Capacity<=2)return "24.Capacity==1";
   if(ld1.Data->TopIndex!=3||ld1.Data->HolesCount!=3||ld1.Data->FirstFreeIndex!=0)return "24.free";
   if(ld1.Data->FirstIndex!=0||ld1.Data->LastIndex!=0)return "24.index";
   if(ld1.Data->Items[0].next!=-1||ld1.Data->Items[0].prev!=2)return "24.[1] next prev";
   if(ld1.Data->Items[1].next!=-1||ld1.Data->Items[1].prev!=3)return "24.[2] next prev";
   if(ld1.Data->Items[2].next!=-1||ld1.Data->Items[2].prev!=1)return "24.[3] next prev"; 
  ld1.Add(T(1));
  ld1.Add(T(2));
  ld1.Add(T(3));
   if(ld1.Data->RefCount.Value!=1)return "25.RefCount!=1";
   if(ld1.Data->Capacity<=2)return "25.Capacity==1";
   if(ld1.Data->TopIndex!=3||ld1.Data->HolesCount!=0||ld1.Data->FirstFreeIndex!=3)return "25.free";
   if(ld1.Data->FirstIndex!=1||ld1.Data->LastIndex!=3)return "25.index";
   if(ld1.Data->Items[0].next!=2||ld1.Data->Items[0].prev!=0)return "25.[1] next prev";
   if(ld1.Data->Items[1].next!=3||ld1.Data->Items[1].prev!=1)return "25.[2] next prev";
   if(ld1.Data->Items[2].next!=0||ld1.Data->Items[2].prev!=2)return "25.[3] next prev";
   if(ld1.Data->Items[0].Value!=1)return "25.[1]value";
   if(ld1.Data->Items[1].Value!=2)return "25.[2]value";
   if(ld1.Data->Items[2].Value!=3)return "25.[3]value";
  i=ld1.Delete(3);
   if(i!=0)return "26.next";
   if(ld1.Data->RefCount.Value!=1)return "26.RefCount!=1";
   if(ld1.Data->Capacity<=2)return "26.Capacity==1";
   if(ld1.Data->TopIndex!=3||ld1.Data->HolesCount!=1||ld1.Data->FirstFreeIndex!=2)return "26.free";
   if(ld1.Data->FirstIndex!=1||ld1.Data->LastIndex!=2)return "26.index";
   if(ld1.Data->Items[0].next!=2||ld1.Data->Items[0].prev!=0)return "26.[1] next prev";
   if(ld1.Data->Items[1].next!=0||ld1.Data->Items[1].prev!=1)return "26.[2] next prev";
   if(ld1.Data->Items[2].next!=-1||ld1.Data->Items[2].prev!=3)return "26.[3] next prev";
   if(ld1.Data->Items[0].Value!=1)return "26.[1]value";
   if(ld1.Data->Items[1].Value!=2)return "26.[2]value";
  i=ld1.Delete(2);
   if(i!=0)return "27.next";
   if(ld1.Data->RefCount.Value!=1)return "27.RefCount!=1";
   if(ld1.Data->Capacity<=2)return "27.Capacity==1";
   if(ld1.Data->TopIndex!=3||ld1.Data->HolesCount!=2||ld1.Data->FirstFreeIndex!=1)return "27.free";
   if(ld1.Data->FirstIndex!=1||ld1.Data->LastIndex!=1)return "27.index";
   if(ld1.Data->Items[0].next!=0||ld1.Data->Items[0].prev!=0)return "27.[1] next prev";
   if(ld1.Data->Items[1].next!=-1||ld1.Data->Items[1].prev!=2)return "27.[2] next prev";
   if(ld1.Data->Items[2].next!=-1||ld1.Data->Items[2].prev!=3)return "27.[3] next prev";
   if(ld1.Data->Items[0].Value!=1)return "27.[1]value";
  i=ld1.Delete(1);
   if(i!=0)return "28.next";
   if(ld1.Data->RefCount.Value!=1)return "28.RefCount!=1";
   if(ld1.Data->Capacity<=2)return "28.Capacity==1";
   if(ld1.Data->TopIndex!=3||ld1.Data->HolesCount!=3||ld1.Data->FirstFreeIndex!=0)return "28.free";
   if(ld1.Data->FirstIndex!=0||ld1.Data->LastIndex!=0)return "28.index";
   if(ld1.Data->Items[0].next!=-1||ld1.Data->Items[0].prev!=1)return "28.[1] next prev";
   if(ld1.Data->Items[1].next!=-1||ld1.Data->Items[1].prev!=2)return "28.[2] next prev";
   if(ld1.Data->Items[2].next!=-1||ld1.Data->Items[2].prev!=3)return "28.[3] next prev";
  ld1.Add(T(1));
  ld1.Add(T(2));
  ld1.Add(T(3));
   if(ld1.Data->RefCount.Value!=1)return "29.RefCount!=1";
   if(ld1.Data->Capacity<=2)return "29.Capacity==1";
   if(ld1.Data->TopIndex!=3||ld1.Data->HolesCount!=0||ld1.Data->FirstFreeIndex!=3)return "29.free";
   if(ld1.Data->FirstIndex!=1||ld1.Data->LastIndex!=3)return "29.index";
   if(ld1.Data->Items[0].next!=2||ld1.Data->Items[0].prev!=0)return "29.[1] next prev";
   if(ld1.Data->Items[1].next!=3||ld1.Data->Items[1].prev!=1)return "29.[2] next prev";
   if(ld1.Data->Items[2].next!=0||ld1.Data->Items[2].prev!=2)return "29.[3] next prev";
   if(ld1.Data->Items[0].Value!=1)return "29.[1]value";
   if(ld1.Data->Items[1].Value!=2)return "29.[2]value";
   if(ld1.Data->Items[2].Value!=3)return "29.[3]value";
  ld1.Delete(1);
  ld1.Add(T(4));
   if(ld1.Data->RefCount.Value!=1)return "30.RefCount!=1";
   if(ld1.Data->Capacity<=2)return "30.Capacity==1";
   if(ld1.Data->TopIndex!=3||ld1.Data->HolesCount!=0||ld1.Data->FirstFreeIndex!=3)return "30.free";
   if(ld1.Data->FirstIndex!=2||ld1.Data->LastIndex!=1)return "30.index";
   if(ld1.Data->Items[0].next!=0||ld1.Data->Items[0].prev!=3)return "30.[1] next prev";
   if(ld1.Data->Items[1].next!=3||ld1.Data->Items[1].prev!=0)return "30.[2] next prev";
   if(ld1.Data->Items[2].next!=1||ld1.Data->Items[2].prev!=2)return "30.[3] next prev";
   if(ld1.Data->Items[0].Value!=4)return "30.[1]value";
   if(ld1.Data->Items[1].Value!=2)return "30.[2]value";
   if(ld1.Data->Items[2].Value!=3)return "30.[3]value";
  ld1.Delete(1);ld1.Delete(2);ld1.Delete(3);
   if(ld1.Data->RefCount.Value!=1)return "31.RefCount!=1";
   if(ld1.Data->Capacity<=2)return "31.Capacity==1";
   if(ld1.Data->TopIndex!=3||ld1.Data->HolesCount!=3||ld1.Data->FirstFreeIndex!=2)return "31.free";
   if(ld1.Data->FirstIndex!=0||ld1.Data->LastIndex!=0)return "31.index";
   if(ld1.Data->Items[0].next!=-1||ld1.Data->Items[0].prev!=3)return "31.[1] next prev";
   if(ld1.Data->Items[1].next!=-1||ld1.Data->Items[1].prev!=0)return "31.[2] next prev";
   if(ld1.Data->Items[2].next!=-1||ld1.Data->Items[2].prev!=1)return "31.[3] next prev";
  ld1.Add(T(1));
  ld1.Add(T(2));
  ld1.Add(T(3));
  ld1.Delete(2);
  ld1.Add(T(4));
   if(ld1.Data->RefCount.Value!=1)return "31.RefCount!=1";
   if(ld1.Data->Capacity<=2)return "31.Capacity==1";
   if(ld1.Data->TopIndex!=3||ld1.Data->HolesCount!=0||ld1.Data->FirstFreeIndex!=3)return "31.free";
   if(ld1.Data->FirstIndex!=1||ld1.Data->LastIndex!=2)return "31.index";
   if(ld1.Data->Items[0].next!=3||ld1.Data->Items[0].prev!=0)return "31.[1] next prev";
   if(ld1.Data->Items[1].next!=0||ld1.Data->Items[1].prev!=3)return "31.[2] next prev";
   if(ld1.Data->Items[2].next!=2||ld1.Data->Items[2].prev!=1)return "31.[3] next prev";
   if(ld1.Data->Items[0].Value!=1)return "31.[1]value";
   if(ld1.Data->Items[1].Value!=4)return "31.[2]value";
   if(ld1.Data->Items[2].Value!=3)return "31.[3]value";
  ld1.Delete(1);ld1.Delete(2);ld1.Delete(3);
   if(ld1.Data->RefCount.Value!=1)return "32.RefCount!=1";
   if(ld1.Data->Capacity<=2)return "32.Capacity==1";
   if(ld1.Data->TopIndex!=3||ld1.Data->HolesCount!=3||ld1.Data->FirstFreeIndex!=2)return "32.free";
   if(ld1.Data->FirstIndex!=0||ld1.Data->LastIndex!=0)return "32.index";
   if(ld1.Data->Items[0].next!=-1||ld1.Data->Items[0].prev!=3)return "32.[1] next prev";
   if(ld1.Data->Items[1].next!=-1||ld1.Data->Items[1].prev!=0)return "32.[2] next prev";
   if(ld1.Data->Items[2].next!=-1||ld1.Data->Items[2].prev!=1)return "32.[3] next prev";
  ld1.Add(T(1));
  ld1.Add(T(2));
  ld1.Add(T(3));
  ld1.Delete(3);
  ld1.Add(T(4));
   if(ld1.Data->RefCount.Value!=1)return "33.RefCount!=1";
   if(ld1.Data->Capacity<=2)return "33.Capacity==1";
   if(ld1.Data->TopIndex!=3||ld1.Data->HolesCount!=0||ld1.Data->FirstFreeIndex!=3)return "33.free";
   if(ld1.Data->FirstIndex!=1||ld1.Data->LastIndex!=3)return "33.index";
   if(ld1.Data->Items[0].next!=2||ld1.Data->Items[0].prev!=0)return "33.[1] next prev";
   if(ld1.Data->Items[1].next!=3||ld1.Data->Items[1].prev!=1)return "33.[2] next prev";
   if(ld1.Data->Items[2].next!=0||ld1.Data->Items[2].prev!=2)return "33.[3] next prev";
   if(ld1.Data->Items[0].Value!=1)return "33.[1]value";
   if(ld1.Data->Items[1].Value!=2)return "33.[2]value";
   if(ld1.Data->Items[2].Value!=4)return "33.[3]value";
  ld1.Delete(1);ld1.Delete(2);ld1.Delete(3);
   if(ld1.Data->RefCount.Value!=1)return "34.RefCount!=1";
   if(ld1.Data->Capacity<=2)return "34.Capacity==1";
   if(ld1.Data->TopIndex!=3||ld1.Data->HolesCount!=3||ld1.Data->FirstFreeIndex!=2)return "34.free";
   if(ld1.Data->FirstIndex!=0||ld1.Data->LastIndex!=0)return "34.index";
   if(ld1.Data->Items[0].next!=-1||ld1.Data->Items[0].prev!=3)return "34.[1] next prev";
   if(ld1.Data->Items[1].next!=-1||ld1.Data->Items[1].prev!=0)return "34.[2] next prev";
   if(ld1.Data->Items[2].next!=-1||ld1.Data->Items[2].prev!=1)return "34.[3] next prev";
  ld1.Insert(1,T(1));
   if(ld1.Data->RefCount.Value!=1)return "35.RefCount!=1";
   if(ld1.Data->Capacity<=0)return "35.Capacity<=0";
   if(ld1.Data->TopIndex!=1||ld1.Data->HolesCount!=0||ld1.Data->FirstFreeIndex!=1)return "35.free";
   if(ld1.Data->FirstIndex!=1||ld1.Data->LastIndex!=1)return "35.index";
   if(ld1.Data->Items[0].next!=0||ld1.Data->Items[0].prev!=0)return "35.next prev";
   if(ld1.Data->Items[0].Value!=1)return "35.value";
  ld1.Insert(1,T(2)); 
   if(ld1.Data->RefCount.Value!=1)return "36.RefCount!=1";
   if(ld1.Data->Capacity<=1)return "36.Capacity==1";
   if(ld1.Data->TopIndex!=2||ld1.Data->HolesCount!=0||ld1.Data->FirstFreeIndex!=2)return "36.free";
   if(ld1.Data->FirstIndex!=2||ld1.Data->LastIndex!=1)return "36.index";
   if(ld1.Data->Items[0].next!=0||ld1.Data->Items[0].prev!=2)return "36.[1] next prev";
   if(ld1.Data->Items[1].next!=1||ld1.Data->Items[1].prev!=0)return "36.[2] next prev";
   if(ld1.Data->Items[0].Value!=1)return "36.[1]value";
   if(ld1.Data->Items[1].Value!=2)return "36.[2]value";
  ld1.Insert(1,T(3));
   if(ld1.Data->RefCount.Value!=1)return "37.RefCount!=1";
   if(ld1.Data->Capacity<=3)return "37.Capacity==1";
   if(ld1.Data->TopIndex!=3||ld1.Data->HolesCount!=0||ld1.Data->FirstFreeIndex!=3)return "37.free";
   if(ld1.Data->FirstIndex!=2||ld1.Data->LastIndex!=1)return "37.index";
   if(ld1.Data->Items[0].next!=0||ld1.Data->Items[0].prev!=3)return "37.[1] next prev";
   if(ld1.Data->Items[1].next!=3||ld1.Data->Items[1].prev!=0)return "37.[2] next prev";
   if(ld1.Data->Items[2].next!=1||ld1.Data->Items[2].prev!=2)return "37.[3] next prev";
   if(ld1.Data->Items[0].Value!=1)return "37.[1]value";
   if(ld1.Data->Items[1].Value!=2)return "37.[2]value";
   if(ld1.Data->Items[2].Value!=3)return "37.[2]value";
  ld1.Insert(2,T(4));
   if(ld1.Data->RefCount.Value!=1)return "38.RefCount!=1";
   if(ld1.Data->Capacity<4)return "38.Capacity==1";
   if(ld1.Data->TopIndex!=4||ld1.Data->HolesCount!=0||ld1.Data->FirstFreeIndex!=4)return "38.free";
   if(ld1.Data->FirstIndex!=4||ld1.Data->LastIndex!=1)return "38.index";
   if(ld1.Data->Items[0].next!=0||ld1.Data->Items[0].prev!=3)return "38.[1] next prev";
   if(ld1.Data->Items[1].next!=3||ld1.Data->Items[1].prev!=4)return "38.[2] next prev";
   if(ld1.Data->Items[2].next!=1||ld1.Data->Items[2].prev!=2)return "38.[3] next prev";
   if(ld1.Data->Items[3].next!=2||ld1.Data->Items[3].prev!=0)return "38.[4] next prev";
   if(ld1.Data->Items[0].Value!=1)return "38.[1]value";
   if(ld1.Data->Items[1].Value!=2)return "38.[2]value";
   if(ld1.Data->Items[2].Value!=3)return "38.[3]value";
   if(ld1.Data->Items[3].Value!=4)return "38.[4]value";
  ld1.Insert(1,T(5));
   if(ld1.Data->RefCount.Value!=1)return "39.RefCount!=1";
   if(ld1.Data->Capacity<5)return "39.Capacity==1";
   if(ld1.Data->TopIndex!=5||ld1.Data->HolesCount!=0||ld1.Data->FirstFreeIndex!=5)return "39.free";
   if(ld1.Data->FirstIndex!=4||ld1.Data->LastIndex!=1)return "39.index";
   if(ld1.Data->Items[0].next!=0||ld1.Data->Items[0].prev!=5)return "39.[1] next prev";
   if(ld1.Data->Items[1].next!=3||ld1.Data->Items[1].prev!=4)return "39.[2] next prev";
   if(ld1.Data->Items[2].next!=5||ld1.Data->Items[2].prev!=2)return "39.[3] next prev";
   if(ld1.Data->Items[3].next!=2||ld1.Data->Items[3].prev!=0)return "39.[4] next prev";
   if(ld1.Data->Items[4].next!=1||ld1.Data->Items[4].prev!=3)return "39.[5] next prev";
   if(ld1.Data->Items[0].Value!=1)return "39.[1]value";
   if(ld1.Data->Items[1].Value!=2)return "39.[2]value";
   if(ld1.Data->Items[2].Value!=3)return "39.[3]value";
   if(ld1.Data->Items[3].Value!=4)return "39.[4]value";
   if(ld1.Data->Items[4].Value!=5)return "39.[5]value";
  ld1.Delete(1);
  ld1.Add(T(1));
   if(ld1.Data->RefCount.Value!=1)return "40.RefCount!=1";
   if(ld1.Data->Capacity<=4)return "40.Capacity==1";
   if(ld1.Data->TopIndex!=5||ld1.Data->HolesCount!=0||ld1.Data->FirstFreeIndex!=5)return "40.free";
   if(ld1.Data->FirstIndex!=4||ld1.Data->LastIndex!=1)return "40.index";
   if(ld1.Data->Items[0].next!=0||ld1.Data->Items[0].prev!=5)return "40.[1] next prev";
   if(ld1.Data->Items[1].next!=3||ld1.Data->Items[1].prev!=4)return "40.[2] next prev";
   if(ld1.Data->Items[2].next!=5||ld1.Data->Items[2].prev!=2)return "40.[3] next prev";
   if(ld1.Data->Items[3].next!=2||ld1.Data->Items[3].prev!=0)return "40.[4] next prev";
   if(ld1.Data->Items[4].next!=1||ld1.Data->Items[4].prev!=3)return "40.[5] next prev";
   if(ld1.Data->Items[0].Value!=1)return "40.[1]value";
   if(ld1.Data->Items[1].Value!=2)return "40.[2]value";
   if(ld1.Data->Items[2].Value!=3)return "40.[3]value";
   if(ld1.Data->Items[3].Value!=4)return "40.[4]value";
   if(ld1.Data->Items[4].Value!=5)return "40.[5]value";
  ld1.Delete(4);  ld1.Insert(2,T(4));
   if(ld1.Data->RefCount.Value!=1)return "40.RefCount!=1";
   if(ld1.Data->Capacity<=4)return "40.Capacity==1";
   if(ld1.Data->TopIndex!=5||ld1.Data->HolesCount!=0||ld1.Data->FirstFreeIndex!=5)return "40.free";
   if(ld1.Data->FirstIndex!=4||ld1.Data->LastIndex!=1)return "40.index";
   if(ld1.Data->Items[0].next!=0||ld1.Data->Items[0].prev!=5)return "40.[1] next prev";
   if(ld1.Data->Items[1].next!=3||ld1.Data->Items[1].prev!=4)return "40.[2] next prev";
   if(ld1.Data->Items[2].next!=5||ld1.Data->Items[2].prev!=2)return "40.[3] next prev";
   if(ld1.Data->Items[3].next!=2||ld1.Data->Items[3].prev!=0)return "40.[4] next prev";
   if(ld1.Data->Items[4].next!=1||ld1.Data->Items[4].prev!=3)return "40.[5] next prev";
   if(ld1.Data->Items[0].Value!=1)return "40.[1]value";
   if(ld1.Data->Items[1].Value!=2)return "40.[2]value";
   if(ld1.Data->Items[2].Value!=3)return "40.[3]value";
   if(ld1.Data->Items[3].Value!=4)return "40.[4]value";
   if(ld1.Data->Items[4].Value!=5)return "40.[5]value";
  ld1.Delete(2); ld1.Insert(3,T(2));
   if(ld1.Data->RefCount.Value!=1)return "41.RefCount!=1";
   if(ld1.Data->Capacity<=4)return "41.Capacity==1";
   if(ld1.Data->TopIndex!=5||ld1.Data->HolesCount!=0||ld1.Data->FirstFreeIndex!=5)return "41.free";
   if(ld1.Data->FirstIndex!=4||ld1.Data->LastIndex!=1)return "41.index";
   if(ld1.Data->Items[0].next!=0||ld1.Data->Items[0].prev!=5)return "41.[1] next prev";
   if(ld1.Data->Items[1].next!=3||ld1.Data->Items[1].prev!=4)return "41.[2] next prev";
   if(ld1.Data->Items[2].next!=5||ld1.Data->Items[2].prev!=2)return "41.[3] next prev";
   if(ld1.Data->Items[3].next!=2||ld1.Data->Items[3].prev!=0)return "41.[4] next prev";
   if(ld1.Data->Items[4].next!=1||ld1.Data->Items[4].prev!=3)return "41.[5] next prev";
   if(ld1.Data->Items[0].Value!=1)return "41.[1]value";
   if(ld1.Data->Items[1].Value!=2)return "41.[2]value";
   if(ld1.Data->Items[2].Value!=3)return "41.[3]value";
   if(ld1.Data->Items[3].Value!=4)return "41.[4]value";
   if(ld1.Data->Items[4].Value!=5)return "41.[5]value";
  return 0;
 }
const char *ListTest()
 {
  List<char> Items;
  for(int i=0;i<1000;i++)Items.Add('a');
  const char *error;
  error = ListTest1<int>();
  if(error)return error;
  error = ListTest1<TestDones>();
  if(error)return error;
  if(TestDones::isBad())return "isBad";
  return 0;
 }
#undef isValidTest
#pragma package(smart_init)
